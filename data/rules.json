{
  "rules": [
    {
      "destination_address": "127.0.0.1",
      "destination_port": "1280",
      "id": 1,
      "is_active": "true",
      "name": "Accept incoming TCP with SLMP payload",
      "protocol": "TCP",
      "source_address": "127.0.0.1",
      "source_port": "ANY"
    },
    {
      "destination_address": "127.0.0.1",
      "destination_port": "ANY",
      "id": 2,
      "is_active": "true",
      "name": "Accept outgoing TCP with SLMP payload",
      "protocol": "TCP",
      "source_address": "127.0.0.1",
      "source_port": "1280"
    },
    {
      "command": "Read",
      "end_register": "10",
      "id": 3,
      "is_active": "false",
      "name": "Accept outgoing TCP with SLMP payload",
      "protocol": "SLMP",
      "start_register": "0",
      "subcommand": "Read from bit dev in 16 point units"
    },
    {
      "command": "Write Multiple Registers",
      "end_register": "200",
      "id": 4,
      "is_active": "true",
      "name": "Accept MODBUS TCP writes from 0 to 200 on single registers",
      "protocol": "MODBUS",
      "start_register": "25"
    },
    {
      "command": "Read Holding Registers",
      "end_register": "200",
      "id": 5,
      "is_active": "true",
      "name": "Accept MODBUS TCP reads from 0 to 200 on holding registers",
      "protocol": "MODBUS",
      "start_register": "0"
    },
    {
      "destination_address": "127.0.0.1",
      "destination_port": "5020",
      "id": 6,
      "is_active": "true",
      "name": "Accept incoming TCP with SLMP payload",
      "protocol": "TCP",
      "source_address": "127.0.0.1",
      "source_port": "ANY"
    },
    {
      "destination_address": "127.0.0.1",
      "destination_port": "ANY",
      "id": 7,
      "is_active": "true",
      "name": "Accept outgoing TCP with SLMP payload",
      "protocol": "TCP",
      "source_address": "127.0.0.1",
      "source_port": "5020"
    }
  ]
}